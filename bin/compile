#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

if [ $STACK != "heroku-16" ]; then
	echo "Stack ${STACK} not supported" && exit 1
fi

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# This is where the buildpack is stored
BUILDPACK_DIR=`cd $(dirname $0); cd ..; pwd`

source $BUILDPACK_DIR/bin/util

export_env_dir ${ENV_DIR}
export DOTNET_CLI_TELEMETRY_OPTOUT=1
export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1

SRC_DIR=`mktemp -d`
# Move the app source code into temporary src dir using subshell to not leak shopt
(
	shopt -s dotglob
	mv ${BUILD_DIR}/* ${SRC_DIR}
)

mkdir -p ${CACHE_DIR}
mkdir -p ${BUILD_DIR}/.profile.d
DEPLOYMENT_FILE_LOCATION=${SRC_DIR}/.deployment

echo "Installing the dependencies"
apt_install libunwind8 gettext

# decide which SDK to pick - CSPROJ or JSON
if [ -n "$( find $SRC_DIR -maxdepth 3 -iname project.json )" ]; then
  echo "'Project.json' project type detected"
  source $BUILDPACK_DIR/bin/compile-projectjson
else
  echo "'Csproj' project type detected"
  source $BUILDPACK_DIR/bin/compile-csproj
fi

 # copy procfile
mkdir -p ${BUILD_DIR}/.profile.d
cp -n ${BUILDPACK_DIR}/.profile.d/* ${BUILD_DIR}/.profile.d/

if [ -e ${SRC_DIR}/Procfile ]; then
	cp ${SRC_DIR}/Procfile ${BUILD_DIR}
else
	echo "'Procfile' was not found!"
fi

# execute post compilations
if [ -f $SRC_DIR/.post_compile ]; then
	(cd $SRC_DIR && source .post_compile)
else
	echo "File $SRC_DIR/.post_compile not found"	
fi